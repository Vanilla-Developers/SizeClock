name: Release Plugin

on:
  push:
    branches:
      - main # или master

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Права на создание релиза

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Get Project Info
        id: properties
        run: |
          # Более надежный способ получить версию и имя артефакта
          VERSION=$(./gradlew properties -q | grep "^version:" | awk '{print $2}')
          ARTIFACT_NAME=$(grep -o "archivesBaseName = '.*'" build.gradle | cut -d"'" -f2)
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          # Собираем полное имя JAR файла
          echo "JAR_NAME=${ARTIFACT_NAME:-SizeClock}-${VERSION}.jar" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.properties.outputs.VERSION }}"
          name: "Release v${{ steps.properties.outputs.VERSION }}"
          generate_release_notes: true # Автоматически создаем описание из коммитов
          files: "build/libs/${{ steps.properties.outputs.JAR_NAME }}" # Точный путь к файлу
          fail_on_unmatched_files: true
